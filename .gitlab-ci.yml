image: docker:18.09.7

stages:
  - build
  - deploy

variables:
  CONTAINER: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  #DOCKER_HOST: tcp://localhost:2375

services:
  - docker:19-dind

build:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t "$CONTAINER" .
    - docker push "$CONTAINER"
  retry: 2
  only:
    - master
  allow_failure: false
  tags:
    - docker

deploy-staging:
  needs: ["build"]
  stage: deploy
  image: devth/helm:v3.0.2
  script:
    - echo "Deploying to ${CI_ENVIRONMENT_NAME}"
    - helm upgrade
      --install
      --kubeconfig $KUBECONFIG_STAGING
      --atomic
      --wait
      --set web.name="ris-${CI_COMMIT_REF_SLUG}"
      --set web.container=$CONTAINER
      --set env.name=staging
      --set env.url=https://cs.s.cda.gov.ph/ecoopris
      --set env.domain=cs.s.cda.gov.ph
      --set env.tls=selfsigned-cert-tls
      --set env.tls_issuer=selfsigned-issuer
      --set db.hostname=$DB_HOSTNAME
      --set db.username=$DB_USERNAME
      --set db.password=$DB_PASSWORD
      --set db.database=$DB_DATABASE
      ris
      ./.chart/application
  only:
    - master
  tags:
    - docker

deploy-production:
  needs: ["build"]
  when: manual
  stage: deploy
  image: devth/helm:v3.0.2
  script:
    - echo "Deploying to production"
    - echo "${KUBECONFIG_PRODUCTION}"
    - cat ${KUBECONFIG_PRODUCTION}
    - helm upgrade
      --install
      --kubeconfig ${KUBECONFIG_PRODUCTION}
      --atomic
      --wait
      --set web.name="ris-${CI_COMMIT_REF_SLUG}"
      --set web.container=$CONTAINER
      --set env.name=production
      --set env.url=https://cs.cda.gov.ph/ecoopris
      --set env.domain=cs.cda.gov.ph
      --set env.tls=cda-tls
      --set db.hostname=$DB_HOSTNAME
      --set db.username=$DB_USERNAME
      --set db.password=$DB_PASSWORD
      --set db.database=$DB_DATABASE
      ris
      ./.chart/application
  only:
    - master
  tags:
    - docker

.functions: &functions |
    # Functions
    function init_helm(file) {
        mkdir -p /etc/deploy
        cat file
        # echo "${SERVICE_ACCOUNT}" | base64 -d > /etc/deploy/config
    }
